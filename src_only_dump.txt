

--- FILE: src/App.jsx ---

import React, { useEffect, useState } from 'react';
import MainLayout from './layouts/MainLayout';
import Home from './pages/Home';

function App() {
  const [darkMode, setDarkMode] = useState(true); // default to dark

  useEffect(() => {
    const root = window.document.documentElement;
    if (darkMode) {
      root.classList.add('dark');
    } else {
      root.classList.remove('dark');
    }
  }, [darkMode]);

  return (
    <div className="bg-white dark:bg-gray-900 text-gray-900 dark:text-white min-h-screen transition-colors duration-300">
      <MainLayout toggleDark={() => setDarkMode(!darkMode)} isDark={darkMode}>
        <Home />
      </MainLayout>
    </div>
  );
}

export default App;


--- FILE: src/data/projects.js ---

const projects = [
  {
    title: 'SkillFlash',
    description: 'A freelancing platform built with React.js, Node.js, Express.js, and MongoDB, featuring secure authentication and real-time chat.',
    tech: ['React.js', 'Node.js', 'Express.js', 'MongoDB'],
    link: 'https://github.com/savalagikadappa/skillFlash',
    liveLink: 'https://skillflash.vercel.app', // Live link available
  },
  {
    title: 'WIDS 2025',
    description: 'A ReactJS project created for the Women in Data Science (WIDS) 2025 conference.',
    tech: ['ReactJS'],
    link: 'https://github.com/savalagikadappa/wids-2025',
    liveLink: "https://wids.kletech.ac.in"
  },
  {
    title: 'Weed Detection using YOLO11 & Soft-NMS',
    description: 'AI-powered system for detecting weeds in cotton crops using YOLO and OpenCV.',
    tech: ['Python', 'OpenCV', 'YOLO11'],
    link: 'https://github.com/savalagikadappa/weed-detection-using-YOLO11',
    // No live link
  },
  {
    title: 'QUIZ Application',
    description: 'A JavaScript-based quiz application with a dynamic user interface.',
    tech: ['JavaScript'],
    link: 'https://github.com/savalagikadappa/QUIZ-application',
    liveLink: 'https://kadappaquiz.vercel.app', // Live link available
  },
  {
    title: 'WceHackathon2025_coders_01',
    description: 'A React-Native App project developed for the WCE Hackathon 2025.',
    tech: ['React-Native', 'Javascript'],
    link: 'https://github.com/savalagikadappa/WceHackathon2025_coders_01',
    // No live link
  },
  {
    title: 'Video Chat',
    description: 'A real-time video chat application built with ReactJS and WebRTC.',
    tech: ['ReactJS', 'Socket-IO', 'WebRTC', 'Javascript'],
    link: 'https://github.com/savalagikadappa/videochat',
    liveLink: 'https://videochatbyks.vercel.app', // Live link available
  },
];


export default projects;

--- FILE: src/data/skills.js ---

const skills = [
    "Coding Profiles", // 🔥 This will show your coding platforms
    "C/C++",
    "Python",
    "JavaScript",
    "HTML/CSS",
    "React.js",
    "Node.js",
    "Express.js",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "AWS",
    "Vercel",
    "Heroku",
    "Selenium",
    "YOLO",
    "OpenCV",
    "Tailwind CSS",
    "Bootstrap",
];

export default skills;


--- FILE: src/data/experience.js ---

const experience = [
    {
        company: 'SkillFlash',
        role: 'MERN Stack Developer',
        period: 'Nov 2024 – Feb 2025',
        description: [
            'Built a scalable freelancing platform using React.js and Express.js.',
            'Implemented authentication and session management using MongoDB and Node.js.',
            'Integrated email verification and password reset with Nodemailer.',
            'Created dashboards for freelancers and clients.'
        ]
    }
];
export default experience;

--- FILE: src/components/Footer.jsx ---

export default function Footer() {
    return (
        <footer className="text-center text-sm py-4 text-gray-500 mt-10">
            &copy; {new Date().getFullYear()} Kadappa Savalagi · <a className="text-indigo-500" href="mailto:kadappasavalagi@gmail.com">kadappasavalagi@gmail.com</a>
        </footer>
    );
}

--- FILE: src/components/SkillBadge.jsx ---

import { FaPython, FaJsSquare, FaReact, FaNodeJs, FaGitAlt, FaAws } from 'react-icons/fa';
import {
    SiCplusplus, SiMongodb, SiMysql, SiFlask, SiGithub, SiVercel, SiHeroku,
    SiSelenium, SiOpencv, SiTailwindcss, SiBootstrap, SiCodechef,
    SiLeetcode, SiGeeksforgeeks, SiCodeforces
} from 'react-icons/si';

const icons = {
    'C/C++': <SiCplusplus />,
    'Python': <FaPython />,
    'JavaScript': <FaJsSquare />,
    'HTML/CSS': <i className="devicon-html5-plain-wordmark text-3xl text-orange-600"></i>,
    'React.js': <FaReact />,
    'Node.js': <FaNodeJs />,
    'Express.js': <SiFlask />,
    'Flask': <SiFlask />,
    'MongoDB': <SiMongodb />,
    'MySQL': <SiMysql />,
    'Git': <FaGitAlt />,
    'GitHub': <SiGithub />,
    'AWS': <FaAws />,
    'Vercel': <SiVercel />,
    'Heroku': <SiHeroku />,
    'Selenium': <SiSelenium />,
    'YOLO': <SiOpencv />,
    'OpenCV': <SiOpencv />,
    'Tailwind CSS': <SiTailwindcss />,
    'Bootstrap': <SiBootstrap />,
};

const codingProfiles = [
    {
        name: 'LeetCode',
        icon: <SiLeetcode className="text-yellow-600 text-2xl" />,
        url: 'https://leetcode.com/u/kadappasavalagi/',
    },
    {
        name: 'Codeforces',
        icon: <SiCodeforces className="text-blue-700 text-2xl" />,
        url: 'https://codeforces.com/profile/itskadu',
    },
    {
        name: 'CodeChef',
        icon: <SiCodechef className="text-gray-800 text-2xl" />,
        url: 'https://www.codechef.com/users/kadappasavalag',
    },
    {
        name: 'GeeksforGeeks',
        icon: <SiGeeksforgeeks className="text-green-700 text-2xl" />,
        url: 'https://auth.geeksforgeeks.org/user/kadappasavalagi',
    },
    {
        name: 'GitHub',
        icon: <SiGithub className="text-black text-2xl" />,
        url: 'https://github.com/savalagikadappa',
    },
];

export default function SkillBadge({ name }) {
    const baseClass = "flex flex-col items-center justify-center m-4 text-white text-center ";

    if (name === 'Coding Profiles') {
        return (
            <div className="w-full max-w-[80%] w-full mx-auto">
                <h2 className="text-center text-xl font-bold text-white mb-2">Coding Profiles</h2>
                <div className="flex flex-wrap justify-center">
                    {codingProfiles.map((profile, idx) => (
                        <a
                            key={idx}
                            href={profile.url}
                            target="_blank"
                            rel="noreferrer"
                            className={baseClass}
                        >
                            <div className="w-12 h-12 flex items-center justify-center bg-white rounded-full mb-1">
                                {profile.icon}
                            </div>
                            <span className="text-sm font-semibold">{profile.name}</span>
                        </a>
                    ))}
                </div>
                <h2 className="text-center text-xl font-bold text-white mt-6 mb-2 max-w-[80%] w-full mx-auto
">Technical Skills</h2>
                <div className="flex flex-wrap justify-center">
                    {Object.keys(icons).map((skill, idx) => (
                        <div key={idx} className={baseClass}>
                            <span className="text-3xl mb-1">{icons[skill]}</span>
                            <span className="text-sm font-semibold">{skill}</span>
                        </div>
                    ))}
                </div>
            </div>
        );
    }

    return null;
}

--- FILE: src/components/Header.jsx ---

import { useState } from 'react';

export default function Header() {
    const [isOpen, setIsOpen] = useState(false);

    const navLinks = [
        { href: "#projects", label: "Projects" },
        { href: "#skills", label: "Skills" },
        { href: "#experience", label: "Experience" },
        { href: "#contact", label: "Contact" },
    ];

    return (
        <header className="bg-white shadow-lg sticky top-0 z-50 backdrop-blur-md">
            <div className="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
                <h1 className="text-3xl font-extrabold text-transparent bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 bg-clip-text">
                    Kadappa Savalagi
                </h1>

                {/* Desktop Nav */}
                <nav className="hidden md:flex gap-6 items-center">
                    {navLinks.map((link) => (
                        <a
                            key={link.label}
                            href={link.href}
                            className="text-gray-700 font-medium hover:text-indigo-600 relative group"
                        >
                            {link.label}
                            <span className="block h-0.5 bg-indigo-500 max-w-0 group-hover:max-w-full transition-all duration-300"></span>
                        </a>
                    ))}
                </nav>

                {/* Mobile Toggle */}
                <button
                    className="md:hidden focus:outline-none"
                    onClick={() => setIsOpen(!isOpen)}
                >
                    <svg
                        className="w-7 h-7 text-indigo-600"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        {isOpen ? (
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                        ) : (
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                        )}
                    </svg>
                </button>
            </div>

            {/* Mobile Dropdown */}
            {isOpen && (
                <div className="md:hidden bg-white rounded-b-xl shadow-xl mx-4 mt-2 px-4 py-4 space-y-3">
                    {navLinks.map((link) => (
                        <a
                            key={link.label}
                            href={link.href}
                            onClick={() => setIsOpen(false)}
                            className="block text-gray-700 font-medium hover:text-indigo-600 relative"
                        >
                            {link.label}
                        </a>
                    ))}
                </div>
            )}
        </header>
    );
}


--- FILE: src/components/Contact.jsx ---

export default function Contact() {
    return (
        <section className="bg-white py-12 max-w-[90%] w-full mx-auto">
            <h2 className="text-4xl font-bold mb-6 text-indigo-800 text-center">Contact</h2>
            <div className="text-center space-y-4 text-lg text-gray-700">
                <p>
                    <span className="font-semibold">Email:</span>{' '}
                    <a href="mailto:kadappasavalagi@gmail.com" className="text-indigo-600 hover:underline">
                        kadappasavalagi@gmail.com
                    </a>
                </p>
                <p>
                    <span className="font-semibold">Phone:</span>{' '}
                    <a href="tel:+918660195703" className="text-indigo-600 hover:underline">
                        +91 8660195703
                    </a>
                </p>
                <p>
                    <span className="font-semibold">LinkedIn:</span>{' '}
                    <a
                        href="https://www.linkedin.com/in/kadappasavalagi"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-indigo-600 hover:underline"
                    >
                        linkedin.com/in/kadappasavalagi
                    </a>
                </p>
            </div>
        </section>
    );
}


--- FILE: src/components/ProjectCard.jsx ---

export default function ProjectCard({ title, description, tech, link, liveLink }) {
    return (
        <div className="w-full bg-white shadow-lg rounded-xl p-6 transition-transform duration-300 hover:scale-105 min-w-[300px] sm:min-w-[350px] lg:min-w-[400px] max-w-[450px]">
            <h3 className="text-2xl sm:text-3xl font-extrabold text-gray-900 mb-4 text-center hover:text-indigo-500 transition-colors duration-300">
                {title}
            </h3>

            <p className="text-gray-600 text-sm sm:text-base mb-6 text-center leading-relaxed hover:text-gray-800 transition-colors duration-300">
                {description}
            </p>

            <ul className="flex flex-wrap justify-center gap-2 sm:gap-3 mb-6">
                {tech.map(t => (
                    <li
                        key={t}
                        className="bg-gray-300 text-gray-800 text-xs sm:text-sm font-semibold px-3 py-1 rounded-full hover:bg-indigo-500 transition-transform duration-300 hover:scale-105"
                    >
                        {t}
                    </li>
                ))}
            </ul>

            <div className="flex flex-col sm:flex-row justify-center items-center gap-3">
                {liveLink && (
                    <a
                        href={liveLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-sm sm:text-base font-semibold text-indigo-600 hover:text-indigo-700 hover:underline px-4 py-2 rounded-md border-2 border-indigo-600 hover:bg-indigo-100 transition-all duration-300"
                    >
                        View Live Project
                    </a>
                )}
                {link && (
                    <a
                        href={link}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-sm sm:text-base font-semibold text-indigo-600 hover:text-indigo-700 hover:underline px-4 py-2 rounded-md border-2 border-indigo-600 hover:bg-indigo-100 transition-all duration-300"
                    >
                        View Repository
                    </a>
                )}
            </div>
        </div>
    );
}


--- FILE: src/index.css ---

@import "tailwindcss";
/* Wrap your @apply in the “base” layer so Tailwind will see and process it */
@layer base {
  body {
    @apply bg-gray-100;
  }
}


--- FILE: src/assets/icons/.gitkeep ---



--- FILE: src/assets/images/.gitkeep ---



--- FILE: src/pages/Home.jsx ---

import { useState } from 'react';
import projects from '../data/projects';
import skills from '../data/skills';
import experience from '../data/experience';
import ProjectCard from '../components/ProjectCard';
import SkillBadge from '../components/SkillBadge';
import Contact from '../components/Contact';

export default function Home() {
    // State to toggle resume visibility
    const [showResume, setShowResume] = useState(false);

    // Function to toggle resume visibility
    const toggleResume = () => setShowResume(!showResume);

    return (
        <main className="max-w-7xl mx-auto px-4 py-8 overflow-x-hidden">
            {/* Resume Button */}
            {/* About Me + Resume Button */}
            {/* About Me + Resume Button */}
            <section id="resume" className="mb-12 py-12 px-4  from-indigo-900 via-indigo-800 to-indigo-900 text-white rounded-2xl shadow-lg">
                <div className="flex flex-col items-center text-center space-y-8 max-w-4xl mx-auto">
                    <div>
                        <h2 className="text-5xl font-extrabold mb-6">Hi, I'm Kadappa Savalagi</h2>
                        <p className="text-2xl leading-relaxed">
                            A passionate techie with a strong interest in software development, data structures, and algorithms.
                            I enjoy building innovative applications and solving real-world challenges through efficient code.
                        </p>
                    </div>
                    <div className="w-full sm:w-auto">
                        <button
                            onClick={toggleResume}
                            className="transition duration-300 ease-in-out transform hover:scale-105 text-white bg-pink-600 hover:bg-pink-700 font-bold text-xl py-4 px-12 rounded-xl shadow-2xl focus:outline-none focus:ring-4 focus:ring-pink-300"
                        >
                            {showResume ? "Hide Resume" : "Show Resume"}
                        </button>
                    </div>
                </div>
            </section>


            {/* Resume Section - Shown only if showResume is true */}
            {showResume && (
                <section className="mb-12">
                    <iframe
                        src="/resume.pdf"
                        width="100%"
                        height="600px"
                        className="rounded-lg"
                        style={{
                            border: "none",
                            zoom: "100%",  // Ensure it shows at 100% zoom
                        }}
                    />
                </section>
            )}

            {/* Projects Section */}
            <section id="projects" className="mb-12">
                <h2 className="text-4xl font-bold mb-6 text-indigo-800 text-white">Projects</h2>
                <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 xl:grid-cols-3">
                    {projects.map((p, i) => (
                        <ProjectCard key={i} {...p} />
                    ))}
                </div>
            </section>

            {/* Skills Section */}
            <section id="skills" className="mb-12">
                <h2 className="text-4xl font-bold mb-6 text-indigo-800 max-w-[90%] w-full mx-auto text-white">Skills</h2>
                <div className="flex flex-wrap justify-center gap-6">
                    {skills.map(s => <SkillBadge key={s} name={s} icon="💻" />)}
                </div>
            </section>

            {/* Experience Section */}
            <section id="experience" className="mb-12 max-w-[90%] w-full mx-auto">
                <h2 className="text-4xl font-bold mb-6 text-indigo-800 text-white">Experience</h2>
                {experience.map((exp, i) => (
                    <div key={i} className="mb-8 bg-white p-6 rounded-xl shadow-md">
                        <h3 className="text-xl font-semibold text-indigo-700">{exp.role} @ {exp.company}</h3>
                        <p className="text-sm text-gray-500">{exp.period}</p>
                        <ul className="list-disc ml-6 mt-2 text-gray-700">
                            {exp.description.map((d, idx) => <li key={idx}>{d}</li>)}
                        </ul>
                    </div>
                ))}
            </section>

            {/* Contact Section */}
            <section id="contact" className="mt-16">
                <Contact />
            </section>

        </main>
    );
}

--- FILE: src/layouts/MainLayout.jsx ---

import Header from '../components/Header';
import Footer from '../components/Footer';

export default function MainLayout({ children, toggleDark, isDark }) {
    return (
        <>
            <Header toggleDark={toggleDark} isDark={isDark} />
            <main>{children}</main>
            <Footer />
        </>
    );
}

--- FILE: src/main.jsx ---

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './index.css'; // Tailwind directives

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);